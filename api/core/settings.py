"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import sys
from dotenv import load_dotenv
from itassist.utils.file_utils import get_data_path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load .env from BASE_DIR
load_dotenv()


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&#acm@71t!v60)h8l#t^xo=n7eni2mxfrn@y#ttuun1!uz-z7#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'itassist'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'azure' : {
        'ENGINE': 'django.db.backends.mysql',  
        'NAME': 'aibuilder',  
        'USER': 'egptadmin',  
        'PASSWORD': 'Admin@1234',  
        'HOST': 'egpt.mysql.database.azure.com',  
        'PORT': '3306',
    }
}

# DATABASES = {

#     'default': {  
#         'ENGINE': 'django.db.backends.mysql',  
#         'NAME': 'aibuilder',  
#         'USER': 'egptadmin',  
#         'PASSWORD': 'Admin@1234',  
#         'HOST': 'egpt.mysql.database.azure.com',  
#         'PORT': '3306',
#     } 
# }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Main userdata folder (copied once on .exe, normal in dev)
USER_DATA_ROOT = get_data_path("userdata")

# All other paths derived from that
CONV_JSON_FILE = os.path.join(USER_DATA_ROOT, "conversations.json")
DEFAULT_FILE = os.path.join(USER_DATA_ROOT, "default_hyper_params.json")
SELECTED_FILE = os.path.join(USER_DATA_ROOT, "selected_hyper_params.json")
MODELS_FILE = os.path.join(USER_DATA_ROOT, "models.json")
DOCUMENT_ROOT = os.path.join(USER_DATA_ROOT, "Documents")
DOWNLOAD_FOLDER = os.path.join(DOCUMENT_ROOT, "others")
ENGINE_CONFIG_FILE = os.path.join(USER_DATA_ROOT, "inference_engine.json")

# chroma_db is a subfolder of userdata
CHROMA_DB_PATH = os.path.join(USER_DATA_ROOT, "chroma_db")

# Azure
AZURE_CONNECTION_STRING = os.getenv("AZURE_CONNECTION_STRING")
AZURE_CONTAINER_NAME = "aibuilder"


# CONV_JSON_FILE = r"./userdata/conversations.json"
# USER_DATA_ROOT = r"./userdata/"
# DEFAULT_FILE = r"./userdata/default_hyper_params.json"
# SELECTED_FILE = r"./userdata/selected_hyper_params.json"
# MODELS_FILE = r"./userdata/models.json"
# DOCUMENT_ROOT = r"./userdata/Documents"
# CHROMA_DB_PATH = r"./userdata/chroma_db"
# DOWNLOAD_FOLDER = r"./userdata/Documents/others"

# AZURE_CONNECTION_STRING = os.getenv('AZURE_CONNECTION_STRING')
# # print(AZURE_CONNECTION_STRING)
# AZURE_CONTAINER_NAME = "aibuilder"
